

Steps to export users along with their attributes and licenses from Entra ID (formerly Azure AD) using the Microsoft Graph API:

1. Register an App in Azure AD
1. Go to the Azure Portal.
2. Navigate to Azure Active Directory > App registrations > New registration.
3. Provide a name for your app and register it.
4. Note down the Application (client) ID and Directory (tenant) ID.

2. Configure API Permissions
1. In the app registration, go to API permissions > Add a permission.
2. Select Microsoft Graph > Application permissions.
3. Add the following permissions: `User.Read.All`, `Directory.Read.All`.
4. Click Grant admin consent for the permissions.

3. Generate a Client Secret
1. Go to Certificates & secrets in your app registration.
2. Click on New client secret, provide a description, and set an expiration period.
3. Note down the client secret value.

4. Authenticate and Get an Access Token
Use the following PowerShell script to authenticate and get an access token:


$tenantId = "your-tenant-id"
$clientId = "your-client-id"
$clientSecret = "your-client-secret"
$body = @{
    grant_type    = "client_credentials"
    scope         = "https://graph.microsoft.com/.default"
    client_id     = $clientId
    client_secret = $clientSecret
}
$response = Invoke-RestMethod -Method Post -Uri "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token" -ContentType "application/x-www-form-urlencoded" -Body $body
$accessToken = $response.access_token



5. Export Users and Their Attributes

Use the following PowerShell script to export users and their attributes:
```powershell
$uri = "https://graph.microsoft.com/v1.0/users"
$headers = @{
    Authorization = "Bearer $accessToken"
}
$users = Invoke-RestMethod -Method Get -Uri $uri -Headers $headers
$userDetails = @()

foreach ($user in $users.value) {
    $userDetails += [PSCustomObject]@{
        Id = $user.id
        DisplayName = $user.displayName
        UserPrincipalName = $user.userPrincipalName
        Mail = $user.mail
        JobTitle = $user.jobTitle
        Department = $user.department
        CompanyName = $user.companyName
        OfficeLocation = $user.officeLocation
        MobilePhone = $user.mobilePhone
        AccountEnabled = $user.accountEnabled
    }
}

$userDetails | Export-Csv -Path "C:\path\to\export\user_details.csv" -NoTypeInformation




6. Export User Licenses
Use the following PowerShell script to export user licenses:

$userLicenses = @()

foreach ($user in $users.value) {
    $userId = $user.id
    $licenseUri = "https://graph.microsoft.com/v1.0/users/$userId/licenseDetails"
    $licenseDetails = Invoke-RestMethod -Method Get -Uri $licenseUri -Headers $headers
    foreach ($license in $licenseDetails.value) {
        $userLicenses += [PSCustomObject]@{
            UserPrincipalName = $user.userPrincipalName
            SkuId = $license.skuId
            SkuPartNumber = $license.skuPartNumber
        }
    }
}

$userLicenses | Export-Csv -Path "C:\path\to\export\user_licenses.csv" -NoTypeInformation



Additional Resources

- [Microsoft Graph API Documentation](https://learn.microsoft.com/en-us/graph/overview)
- Graph Explorer - A tool to test and explore the Graph API.

These steps should help you export users along with their attributes and licenses from Entra ID using the Microsoft Graph API[1](https://learn.microsoft.com/en-us/answers/questions/1517070/how-to-export-the-entra-user-details-with-account)[2](https://www.alitajran.com/export-microsoft-entra-id-users-to-csv-powershell/). If you have any specific configurations or further questions, feel free to ask!

