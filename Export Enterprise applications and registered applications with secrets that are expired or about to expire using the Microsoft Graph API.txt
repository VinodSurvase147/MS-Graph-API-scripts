

To export Enterprise applications and registered applications with secrets that are expired or about to expire using the Microsoft Graph API, follow these detailed steps:

Prerequisites
1. Azure AD Permissions: Ensure you have the necessary permissions (Application Administrator or Global Administrator).
2. Graph Explorer: Use the Microsoft Graph Explorer or any tool that can make HTTP requests.
3. PowerShell: Install the Microsoft Graph PowerShell SDK.

Steps

#1. Sign in to Graph Explorer
   - Go to the Microsoft Graph Explorer.
   - Sign in with your Azure AD credentials.

#2. List All Applications
   - Use the following endpoint to list all applications:

     GET https://graph.microsoft.com/v1.0/applications
  

#3. Filter Applications by Secret Expiry
   - To filter applications based on secret expiry, you can use the `passwordCredentials` property. Here’s an example to get applications with secrets expiring within the next 30 days:
  
     GET https://graph.microsoft.com/v1.0/applications?$filter=passwordCredentials/endDateTime le '2024-01-12T00:00:00Z'&$select=displayName,passwordCredentials
  

#4. Export the Data
   - You can export the data to a CSV file using a PowerShell script. Here’s an example:
   
     # Connect to Microsoft Graph
     Connect-MgGraph -Scopes "Application.Read.All"

     # Get all applications
     $applications = Get-MgApplication -All

     # Filter by secret expiry
     $expiringSecrets = $applications | Where-Object {
         $_.passwordCredentials | Where-Object { $_.endDateTime -le (Get-Date).AddDays(30) }
     }

     # Export to CSV
     $expiringSecrets | Select-Object displayName, @{Name="SecretExpiry";Expression={($_.passwordCredentials | Where-Object { $_.endDateTime -le (Get-Date).AddDays(60) }).endDateTime}} | Export-Csv -Path "ExpiringSecrets.csv" -NoTypeInformation


Additional Tips

- Adjust Date Range: Modify the date range in the filter to suit your needs.
- Documentation: Refer to the Microsoft Graph API documentation for more details on available properties and filtering options.

By following these steps, you should be able to export lists of applications with secrets that are expired or about to expire in your tenant[1](https://learn.microsoft.com/en-us/entra/identity/enterprise-apps/scripts/powershell-export-apps-with-expiring-secrets)[2](https://learn.microsoft.com/en-us/entra/identity/enterprise-apps/scripts/powershell-export-apps-with-secrets-beyond-required)[3](https://www.alitajran.com/export-entra-id-app-registrations-certificates-secrets/).

If you have any specific requirements or run into issues, feel free to ask!

